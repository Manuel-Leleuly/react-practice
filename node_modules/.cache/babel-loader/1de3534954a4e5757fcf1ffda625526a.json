{"ast":null,"code":"var _jsxFileName = \"/home/noel/Desktop/from_github/counter-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nimport \"./App.css\"; // function App() {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 1\n      }, {\n        id: 3,\n        value: 2\n      }, {\n        id: 4,\n        value: 3\n      }]\n    };\n\n    this.handleIncrement = counter => {\n      // console.log(\"counter\");\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = { ...counter\n      };\n      counters[index].value++;\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleDelete = counterId => {\n      // console.log(\"Event Handler Called\", counterId);\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this) // <main className=\"container\"></main>\n    ;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/noel/Desktop/from_github/counter-app/src/App.js"],"names":["React","Component","NavBar","Counters","App","state","counters","id","value","handleIncrement","counter","index","indexOf","setState","handleReset","map","c","handleDelete","counterId","filter","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP,C,CAEA;;;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADQ,EAER;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFQ,EAGR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHQ,EAIR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJQ;AADJ,KADkB;;AAAA,SAU1BC,eAV0B,GAUPC,OAAD,IAAa;AAC7B;AACA,YAAMJ,QAAQ,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,CAAjB;AACA,YAAMK,KAAK,GAAGL,QAAQ,CAACM,OAAT,CAAiBF,OAAjB,CAAd;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,GAAkB,EAAE,GAAGD;AAAL,OAAlB;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,CAAgBH,KAAhB;AACA,WAAKK,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KAjByB;;AAAA,SAmB1BQ,WAnB0B,GAmBZ,MAAM;AAClB,YAAMR,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAyBC,CAAD,IAAO;AAC9CA,QAAAA,CAAC,CAACR,KAAF,GAAU,CAAV;AACA,eAAOQ,CAAP;AACD,OAHgB,CAAjB;AAIA,WAAKH,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KAzByB;;AAAA,SA2B1BW,YA3B0B,GA2BVC,SAAD,IAAe;AAC5B;AACA,YAAMZ,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBa,MAApB,CAA4BH,CAAD,IAAOA,CAAC,CAACT,EAAF,KAASW,SAA3C,CAAjB;AACA,WAAKL,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KA/ByB;AAAA;;AAiC1Bc,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,CAEE;AAFF;AAID;;AAtCyB;;AAyC5B,eAAehB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nimport \"./App.css\";\n\n// function App() {\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 1 },\n      { id: 3, value: 2 },\n      { id: 4, value: 3 },\n    ],\n  };\n\n  handleIncrement = (counter) => {\n    // console.log(\"counter\");\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleDelete = (counterId) => {\n    // console.log(\"Event Handler Called\", counterId);\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters });\n  };\n\n  render() {\n    return (\n      <NavBar></NavBar>\n      // <main className=\"container\"></main>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}